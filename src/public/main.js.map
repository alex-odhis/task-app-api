{"version":3,"sources":["./src/app/shared/add-header.interceptor.ts","./src/environments/environment.ts","./src/app/shared/auth.guard.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/tasks/tasks.service.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/app.component.ts","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/tasks/addTask/addtask.component.ts","./src/app/tasks/addTask/addtask.component.html","./src/app/shared/auth.interceptor.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/footer/footer.component.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/auth/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AddHeaderInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService){}\r\n\r\n    intercept( req: HttpRequest<any>, next: HttpHandler ) : Observable<HttpEvent<any>>{\r\n        console.log(`AddHeaderInterceptor - ${req.url}`);\r\n        \r\n        let jsonReq: HttpRequest<any> = req.clone({\r\n            setHeaders: {'Content-Type': 'Application/Json'}\r\n        });\r\n\r\n        return next.handle(jsonReq)\r\n        .pipe(\r\n            tap(event=> {\r\n                if (event.type === HttpEventType.Response) {\r\n                    console.log(event.body);   \r\n                }\r\n            })\r\n        )\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  name: '(DEV)',\n  PORT: 'http://localhost:3000/tasks'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router,  } from \"@angular/router\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private auth: AuthService,\r\n                private route: Router) {\r\n        \r\n    }\r\n    canActivate(): boolean {\r\n        if (this.auth.loggedIn()) {\r\n            return true\r\n        }else{\r\n            this.route.navigate(['/login'])\r\n            return false\r\n        }    \r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { EMPTY, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { TasksService } from \"./tasks.service\";\r\n\r\n@Component({\r\n\r\n    templateUrl: './tasks.component.html',\r\n\r\n    styleUrls: ['./tasks.component.css']\r\n})\r\n\r\nexport class TasksComponent{\r\n    errorMessage = ''\r\n\r\n    constructor(private tasksService: TasksService,\r\n                private router: Router) {}\r\n\r\n    tasks$ = this.tasksService.tasks$\r\n        .pipe( catchError(error => {\r\n                this.errorMessage = error;\r\n                return EMPTY;\r\n            })\r\n        );\r\n\r\n    deleteTask(task): void {\r\n        if (+task._id === 0) {\r\n            //it was never save, no need to delete\r\n            this.router.navigate(['/task'])\r\n        } else {\r\n            if (confirm(`Confirm that you want to delete + ${task.name}`)) {\r\n                this.tasksService.deleteTask(task).subscribe({\r\n                    error: err => this.errorMessage = err\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}","<h1 class=\"text-center\">My Tasks</h1>\r\n<table *ngIf=\"tasks$ | async as tasks\" class=\"table table-responsive-md text-primary mx-2\">\r\n    <thead class=\"thead-light\">\r\n        <tr>\r\n            <th>Task</th>\r\n            <th>Task Description</th>\r\n            <th>Started</th>\r\n            <th>Completed</th>\r\n            <th>Update Task</th>\r\n            <th>Delete Task</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let task of tasks\">\r\n        <tr>\r\n            <td class=\"font-weight-bold\">{{task.name}}</td>\r\n            <td class=\"font-italic\">{{task.description}}</td>\r\n            <td>{{ task.started}}</td>\r\n            <td>{{ task.complete }}</td>\r\n            <td ><a [routerLink]=\"['/tasks',task._id,'add']\" class=\"btn btn-info\">Update Task</a></td>\r\n            <td (click)=\"deleteTask(task)\"><a class=\"btn btn-dark\" href=\"\">Delete</a></td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    templateUrl:'./welcome.component.html',\r\n\r\n    styleUrls:['./welcome.component.css']\r\n})\r\n\r\nexport class WelcomeComponent{\r\n    \r\n}","<header class=\"row\">\r\n    <div class=\"col-sm-6 mt-4 tag px-5 \">\r\n        <div class=\"tag\">\r\n            <h1 class=\"text-success\">Organize your Tasks/work, Update when Complete, See how Efficient you can be...</h1>\r\n            <a [routerLink]=\"['/tasks',0,'add']\" class=\"btn btn-primary\">Get Started</a>\r\n            <p class=\"text-primary\"> Performkng tasks has never been this amazing...</p>\r\n        </div>\r\n    </div>\r\n    <div class= \"col-sm-6 my-auto\">\r\n        <img class=\"img-fluid\" src=\"assets/images/task3.png\" alt=\"\">\r\n    </div>\r\n    \r\n</header>\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, of, throwError } from \"rxjs\";\r\nimport { catchError, map, tap } from \"rxjs/operators\";\r\nimport { Task } from \"./task.interface\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TasksService {\r\n    tasksUrl: string = '/tasks'\r\n\r\n    tasks$ = this.http.get<Task[]>(this.tasksUrl)\r\n        .pipe(\r\n            tap(data => console.log(JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        )\r\n\r\n    constructor( private http: HttpClient ){}\r\n\r\n    createTask(task): Observable<Task>{\r\n        // const headers = new HttpHeaders({ 'content-type': 'application/json' });\r\n        task._id = null\r\n        return this.http.post<Task>(this.tasksUrl, task).pipe(\r\n            tap(data => console.log('created product' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n\r\n    getTask(id): Observable<Task>{\r\n        if (+id === 0) {\r\n            return of(this.initialisedTask())\r\n        }\r\n        const url = `${this.tasksUrl}/${id}`\r\n        return this.http.get<Task>(url)\r\n            .pipe(\r\n                tap(data => console.log(JSON.stringify(data))),\r\n                catchError(this.handleError)\r\n            )\r\n    }\r\n\r\n    updateTask(task): Observable<Task>{\r\n        // const headers = new HttpHeaders({ 'content-type': 'application/json' });\r\n        const url = `${this.tasksUrl}/${task._id}`;\r\n\r\n        return this.http.patch<Task>(url, task).pipe(\r\n            tap(() => console.log('updated task' + task._id)),\r\n            map(() => task),\r\n            catchError(this.handleError)\r\n\r\n        )\r\n    }\r\n\r\n    deleteTask(task): Observable<Task>{\r\n        const url = `${this.tasksUrl}/${task._id}`\r\n        return this.http.delete<Task>(url).pipe(\r\n            tap(data => console.log('delete Product' + task._id)),\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n\r\n    //for the id of 0\r\n    initialisedTask(): Task {\r\n        return {\r\n            _id: '0',\r\n            name: null,\r\n            description: null,\r\n            started: null,\r\n            complete: null,\r\n        \r\n        }\r\n    }\r\n\r\n    private handleError(err) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage: string;\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n        }\r\n        console.error(err);\r\n        return throwError(errorMessage);\r\n\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n\r\n    templateUrl: './signup.component.html',\r\n\r\n    styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n    signInForm: FormGroup\r\n    errorMessage=''\r\n    user:any\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private router: Router,\r\n        private authService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.signInForm = this.fb.group({\r\n            email: ['', Validators.required],\r\n            userName: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n\r\n        })\r\n    }\r\n\r\n    signInUser(): void {\r\n        if (this.signInForm.valid) {\r\n            if (this.signInForm.dirty) {\r\n                const p = this.signInForm.value\r\n\r\n                this.authService.signIn(p).subscribe({\r\n                    next: data => {\r\n                        data = this.user;\r\n                        this.onSaveComplete();\r\n                        console.log(this.user);\r\n                    },\r\n                    error: err => this.errorMessage = err\r\n                })\r\n\r\n            } else {\r\n                this.onSaveComplete();\r\n            }\r\n        } else {\r\n            this.errorMessage = 'Please correct form errors';\r\n        }\r\n    }\r\n\r\n    onSaveComplete(): void {\r\n        this.signInForm.reset()\r\n        this.router.navigate(['/tasks'])\r\n    }\r\n\r\n    onBack(): void {\r\n        this.router.navigate(['tasks']);\r\n    };\r\n\r\n\r\n}","<div class=\"card \">\r\n    <div class=\"card-header\">\r\n        <div class=\"text-center\"><i class=\"fa fa-user-circle fa-5x\"></i></div>\r\n        <h3 class=\"text-center text-success\">Sign-Up</h3>\r\n        \r\n    </div>\r\n    <div class=\"card-body\">\r\n        <form novalidate (ngSubmit)=\"signInUser()\" [formGroup]=\"signInForm\">\r\n\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"email\">Email</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"text\" id=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                        [ngClass]=\"{'is-invalid': (signInForm.get('email').touched || signInForm.get('email').dirty) && !signInForm.get('email').valid}\">\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"signInForm.get('email').errors?.required\">Please enter your Email</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"userName\">User Name</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"text\" id=\"userName\" placeholder=\"User Name\"\r\n                        formControlName=\"userName\"\r\n                        [ngClass]=\"{'is-invalid': (signInForm.get('userName').touched || signInForm.get('userName').dirty) && !signInForm.get('userName').valid}\">\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"signInForm.get('userName').errors?.required\">Please enter your User Name</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"password\">Password</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"password\" id=\"password\" placeholder=\"Password\"\r\n                        formControlName=\"password\"\r\n                        [ngClass]=\"{'is-invalid': (signInForm.get('password').touched ||signInForm.get('password').dirty) && !signInForm.get('password').valid}\">\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"signInForm.get('password').errors?.required\"> Please enter your Password</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btn-success mx-2\" type=\"submit\" [disabled]=\"!signInForm.valid\">\r\n                Sign-Up\r\n            </button>\r\n\r\n            <button class=\"btn btn-secondary mx-2\" type=\"cancel\" (click)=\"onBack()\">\r\n                <i class=\"fa fa-arrow-left\"></i>Back\r\n            </button>\r\n        </form>\r\n        <p class=\"my-2\">Already has an Account? <a class=\"btn btn-info\" [routerLink]=\"['/login']\">Log-In...</a></p>\r\n    </div>\r\n\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <navigation></navigation>\n  <router-outlet></router-outlet>\n  \n\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'taskApp';\n}\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from './auth.service';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SignUpComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SignUpComponent,\r\n        LoginComponent\r\n    ],\r\n\r\n    imports: [\r\n        RouterModule.forChild([\r\n            { path: 'sign', component: SignUpComponent },\r\n            { path: 'login', component: LoginComponent }\r\n        ]),\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        HttpClientModule\r\n    ],\r\n\r\n    providers: [\r\n        AuthService\r\n    ],\r\n    \r\n})\r\nexport class AuthModule{ }\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksService } from './tasks/tasks.service';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthModule } from './auth/auth.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddTaskComponent } from './tasks/addTask/addtask.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AddHeaderInterceptor } from './shared/add-header.interceptor';\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport { AuthGuard } from './shared/auth.guard';\n\n@NgModule({\n  declarations: [\n    WelcomeComponent,\n    AppComponent,\n    NavComponent,\n    TasksComponent,\n    AddTaskComponent,\n    FooterComponent\n  ],\n  imports: [\n    RouterModule,\n    AuthModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    AppRoutingModule,\n    HttpClientModule\n  \n  \n  ],\n  providers: [\n    TasksService,\n    AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TasksService } from '../tasks.service';\r\n\r\n@Component({\r\n    templateUrl: './addtask.component.html',\r\n    styleUrls: []\r\n})\r\n\r\nexport class AddTaskComponent implements OnInit {\r\n    task: any\r\n    errorMessage: string = ''\r\n    addTaskForm: FormGroup;\r\n    pageTitle: string = 'Edit Task'\r\n\r\n    constructor(private router: Router,\r\n        private fb: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private tasksService: TasksService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        //CREATING THE FORMGROUP\r\n        this.addTaskForm = this.fb.group({\r\n            name: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            started: ['false', Validators.required],\r\n            complete: ['false', Validators.required]\r\n        })\r\n\r\n        //READING BFROM THE ROUTE\r\n        this.route.paramMap.subscribe(\r\n            params =>{\r\n                const _id =params.get('_id')\r\n                this.getTask(_id)\r\n            }  \r\n        )\r\n\r\n    }\r\n\r\n    getTask(_id){\r\n        this.tasksService.getTask(_id).subscribe({\r\n            next: (task:any)=> this.displayProduct(task),\r\n            error: err=> this.errorMessage= err\r\n\r\n        })\r\n    }\r\n\r\n    displayProduct(task: any): void {\r\n        this.task = task;\r\n        if (!task) {\r\n            this.pageTitle = 'No Task found';\r\n            this.addTaskForm.reset()\r\n        } else {\r\n            if (+this.task._id === 0) {\r\n                this.pageTitle = 'Add Task';\r\n                this.addTaskForm.reset()\r\n            } else {\r\n                this.pageTitle = `Edit Task: ${this.task.name}`;\r\n\r\n                if (this.addTaskForm) {\r\n                    this.addTaskForm.reset();\r\n                    this.addTaskForm.patchValue({\r\n                        name: this.task.name,\r\n                        description: this.task.description,\r\n                        started: this.task.started,\r\n                        complete: this.task.complete\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    saveTask(): void {\r\n        if (this.addTaskForm.valid) {\r\n            if (this.addTaskForm.dirty) {\r\n                const p = { ...this.task, ...this.addTaskForm.value }\r\n\r\n                if (+p._id === 0) {\r\n                    this.tasksService.createTask(p).subscribe({\r\n                        next: () => this.onSaveComplete(),\r\n                        error: err => this.errorMessage = err\r\n\r\n                    })\r\n                } else {\r\n                    this.tasksService.updateTask(p).subscribe({\r\n                        next: () => this.onSaveComplete(),\r\n                        error: err => this.errorMessage = err\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                this.onSaveComplete();\r\n            }\r\n        } else {\r\n            this.errorMessage = 'Please correct form errors';\r\n\r\n        }\r\n    }\r\n\r\n    //deleting a Product\r\n    onDelete(): void {\r\n        if (+this.task._id === 0) {\r\n            //it was never save, no need to delete\r\n            this.onSaveComplete()\r\n        } else {\r\n            if (confirm(`Confirm that you want to delete + ${this.task.name}`)) {\r\n                this.tasksService.deleteTask(this.task).subscribe({\r\n                    next: () => this.onSaveComplete(),\r\n                    error: err => this.errorMessage = err\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onSaveComplete(): void {\r\n        this.addTaskForm.reset()\r\n        this.router.navigate(['/tasks'])\r\n    }\r\n\r\n\r\n\r\n    onBack() {\r\n        this.router.navigate(['/tasks', this.task._id])\r\n    }\r\n}","<div class=\"card mx-3 mb-3\">\r\n    <div class=\"card-header text-center text-success\">\r\n        <h3>{{ pageTitle }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <h4 class=\"text-primary\">Basic Task Information</h4>\r\n\r\n        <form novalidate (ngSubmit)=\"saveTask()\" [formGroup]=\"addTaskForm\">\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"name\">Task Name</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Task Name\"\r\n                        formControlName=\"name\"\r\n                        [ngClass]=\"{'is-invalid':(addTaskForm.get('name').touched || addTaskForm.get('name').dirty) && !addTaskForm.get('name').valid}\">\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"addTaskForm.get('name').errors?.required\">Please enter the Task Name</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"description\">Task Description</label>\r\n                <div class=\"col-sm-8\">\r\n                    <textarea class=\"form-control\" type=\"text\" id=\"description\" placeholder=\"Task Description\"\r\n                        formControlName=\"description\"\r\n                        [ngClass]=\"{'is-invalid': (addTaskForm.get('description').touched || addTaskForm.get('description').dirty) && !addTaskForm.get('description').valid}\"></textarea>\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"addTaskForm.get('description').errors?.required\">Please writer a Product\r\n                            description</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"started\">Started</label>\r\n                <div class=\"col-sm-8\">\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <label class=\"form-check-label\" for=\"\">\r\n                            <input class=\"form-check-input\" type=\"radio\" value=\"true\" formControlName= \"started\">Yes\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <label class=\"form-check-label\" for=\"\">\r\n                            <input class=\"form-check-input\" type=\"radio\" value=\"false\" formControlName=\"started\">No\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"started\">Complete</label>\r\n                <div class=\"col-sm-8\">\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <label class=\"form-check-label\" for=\"\">\r\n                            <input class=\"form-check-input\" type=\"radio\" value= \"true\" formControlName=\"complete\">Yes\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <label class=\"form-check-label\" for=\"\">\r\n                            <input class=\"form-check-input\" type=\"radio\" value=\"false\" formControlName=\"complete\">No\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <div class=\"offset-md-2 col-md-4\">\r\n                    <button class=\"btn btn-success mr-3\" type=\"submit\"\r\n                        [title]=\"addTaskForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                        style=\"width:80px\" [disabled]=\"!addTaskForm.valid\">\r\n                        Save\r\n                    </button>\r\n                    <button class=\"btn btn-secondary mr-3\" type=\"cancel\" (click)=\"onBack()\" style=\"width:80px\">\r\n                        <i class=\"fa fa-arrow-left\">Back</i>\r\n                    </button>\r\n                    <button class=\"btn btn-dark mr-3\" type=\"cancel\" (click)=\"onDelete()\" style=\"width:80px\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private injector: Injector) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authService = this.injector.get(AuthService)\r\n        console.log(`AddHeaderInterceptor - ${req.url}`);\r\n\r\n        let jsonReq: HttpRequest<any> = req.clone({\r\n            setHeaders:{ Authorization:`Bearer ${authService.getToken()}`}\r\n        });\r\n\r\n        return next.handle(jsonReq)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event.type === HttpEventType.Response) {\r\n                        console.log(event.body);\r\n                    }\r\n                })\r\n            )\r\n    }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n\r\n    templateUrl: './login.component.html',\r\n\r\n    styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit{\r\n    loginForm: FormGroup\r\n    user: any\r\n    errorMessage=''\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private authService: AuthService,\r\n                private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        this.loginForm = this.fb.group({\r\n            email: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        })\r\n    }\r\n\r\n    loginUser() {\r\n        if (this.loginForm.valid) {\r\n            if (this.loginForm.dirty) {\r\n                this.user = this.loginForm.value\r\n                this.authService.logIn(this.user).subscribe({\r\n                    next: data => this.onSaveComplete(),\r\n                    error: err => this.errorMessage = err\r\n                })\r\n            } else {\r\n                this.onSaveComplete()\r\n            }\r\n        } else {\r\n            console.log('Please Correct the erros');\r\n\r\n        }\r\n    }\r\n\r\n    onSaveComplete(): void {\r\n        this.loginForm.reset()\r\n        this.router.navigate(['/welcome'])\r\n    }\r\n\r\n    onBack(): void {\r\n        this.router.navigate(['/welcome'])\r\n    }\r\n\r\n}","<div class=\"card \">\r\n    <div class=\"card-header\">\r\n        <div class=\"text-center\"><i class=\"fa fa-user-circle fa-5x\"></i></div>\r\n        <h3 class=\"text-center text-success\">Log-In</h3>\r\n        \r\n    </div>\r\n    <div class=\"card-body\">\r\n        <form novalidate (ngSubmit)=\"loginUser()\" [formGroup]=\"loginForm\">\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"email\">Email</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"text\" id=\"email\" placeholder=\"Email\" formControlName=\"email\"\r\n                        [ngClass]=\"{'is-invalid': (loginForm.get('email').touched || loginForm.get('email').dirty) && !loginForm.get('email').valid}\">\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"loginForm.get('email').errors?.required\">Please enter your Email</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n                <label class=\"col-form-label col-sm-2\" for=\"password\">Password</label>\r\n                <div class=\"col-sm-8\">\r\n                    <input class=\"form-control\" type=\"password\" id=\"password\" placeholder=\"Password\"\r\n                        formControlName=\"password\"\r\n                        [ngClass]=\"{'is-invalid': (loginForm.get('password').touched || loginForm.get('password').dirty) && ! loginForm.get('password').valid}\">\r\n\r\n                    <span class=\"invalid-feedback\">\r\n                        <span *ngIf=\"loginForm.get('password').errors?.required\"> Please enter your Password</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btn-success mx-2\" type=\"submit\">\r\n                Log In\r\n            </button>\r\n\r\n            <button class=\"btn btn-secondary mx-2\" (click)=\"onBack()\">\r\n                <i class=\"fa fa-arrow-left\"></i>Back\r\n            </button>\r\n        </form>\r\n        <p class=\"my-2\">Dont have an account yet? <a class=\"btn btn-info\" [routerLink]=\"['/sign']\">Sign-Up...</a></p>\r\n    </div>\r\n\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector:' foot',\r\n\r\n    template: `\r\n    <footer class=\"footer bg-light row p-5 text-primary\">\r\n       <div class=\"col-sm-6 px-2\">\r\n         <h3 class =\"text-success\">About Us</h3>\r\n         <p>{{about}}</p>\r\n       </div>\r\n       <div class= \"col-sm-6 px-2\">\r\n       <h3 class = \"text-success\">Other Links</h3>\r\n        <ul>\r\n            <li *ngFor = \"let link of links\"><a ahref=\"link.url\">{{link.name}}</a></li>\r\n        </ul>\r\n       </div>\r\n    </footer>\r\n    `,\r\n\r\n    styleUrls:['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n    about = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus in tristique risus. Pellentesque nec sodales ligula.Phasellus ac dictum est.Praesent vel turpis vel magna maximus posuere sed in ligula.Suspendisse potenti.'\r\n    links = [\r\n        {\r\n            name: 'My Tasks',\r\n            url: '#'\r\n        },\r\n        {\r\n            name: 'Profile',\r\n            url: '#'\r\n        },\r\n        {\r\n            name: 'Add Task',\r\n            url: '#'\r\n        }\r\n    ]\r\n\r\n    constructor() {\r\n        \r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\n\r\n@Component({\r\n    selector: 'navigation',\r\n\r\n    templateUrl: './nav.component.html',\r\n\r\n    styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent{\r\n    errorMassage =''\r\n    constructor( public _auth: AuthService) {}\r\n\r\n    logout(){\r\n        this._auth.logOut().subscribe({\r\n            error: err => this.errorMassage = err\r\n        })\r\n    }\r\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/welcome']\"><i class=\"text-primary font-weight-bold\">Task</i><span\r\n            class=\"text-primary\">APP</span></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/welcome']\" routerLinkActive=\"active\">Home<span class=\"sr-only\">(current)</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/tasks']\" routerLinkActive=\"active\">My Tasks\r\n                </a>\r\n            </li>\r\n    \r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/tasks',0,'add']\" routerLinkActive=\"active\" tabindex=\"-1\"\r\n                    aria-disabled=\"true\">Add Task</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n                <a *ngIf= \"!_auth.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"active\">Log-In</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a *ngIf= \"!_auth.loggedIn()\" class=\"nav-link\" [routerLink]=\"['/sign']\"  routerLinkActive=\"active\">Sign-Up</a>\r\n            </li>\r\n            <li *ngIf= \"_auth.loggedIn()\" class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Profile\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <a *ngIf= \"_auth.loggedIn()\" (click)= \"logout()\" class=\"dropdown-item\">logout</a>\r\n                    <a *ngIf= \"_auth.loggedIn()\" class=\"dropdown-item\" href=\"#\">profile</a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n            <button class=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n</nav>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    private _signUpUrl = `/users`;\r\n    private _loginUrl = `/users/login`;\r\n    private _logoutUrl = `/users/logout`;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    signIn(user): Observable<any> {\r\n        return this.http.post<any>(this._signUpUrl, user).pipe(\r\n            tap(res => {\r\n                localStorage.setItem('token', res.token)\r\n                console.log(res);\r\n            }),\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n\r\n    logIn(user): Observable<any> {\r\n        return this.http.post<any>(this._loginUrl, user).pipe(\r\n            tap(res => localStorage.setItem('token', res.token)),\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n\r\n    loggedIn() {\r\n        return !!localStorage.getItem('token')\r\n    }\r\n    getToken() {\r\n        return localStorage.getItem('token')\r\n    }\r\n\r\n    logOut(): Observable<any> {\r\n        return this.http.post<any>(this._logoutUrl, {}).pipe(\r\n            tap(res => localStorage.removeItem('token')),\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n\r\n    getProfile(): Observable<any> {\r\n        return null\r\n    }\r\n\r\n    editProfile(user): Observable<any> {\r\n        return null\r\n    }\r\n\r\n    deleteProfile(): Observable<any> {\r\n        return null\r\n    }\r\n\r\n    private handleError(err) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage: string;\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n        }\r\n        console.error(err);\r\n        return throwError(errorMessage);\r\n\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AddTaskComponent } from './tasks/addTask/addtask.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'tasks', component: TasksComponent, canActivate:[AuthGuard] },\n  { path: 'tasks/:_id/add', component: AddTaskComponent, canActivate: [AuthGuard]},\n  { path: '', redirectTo: 'welcome', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}